clear all; 
clc; 
close all;
%%
data37714 = load('data37714.mat');  %dati zana
data37405 = load('data37405.mat');  %dati zana
%%
t = (data37714.time);
n = data37714.n(2:size(t));
TeMax = data37714.TeMax(2:size(t)); %- 'TeMax' (central electron temperature) is in keV
neMax = data37714.neMax(2:size(t));
Ell = data37714.Ell(2:size(t));
Spri = data37714.Spri(2:size(t));

shot37714 = load('shot_37714.mat'); %dati cluster
dati = shot37714.Data;
NEU213y = dati.NEU213.y;
NEU213x = dati.NEU213.x;
BF3x = dati.BF3.x;
BF3y = dati.BF3.y;
IPL = shot37714.Data.IPLmis.y;
time = shot37714.Data.IPLmis.x;
Vloop = shot37714.Data.Vloop.y;


figure('Name','Zeff')
plot(t,data37714.Zeff); title('Zeff');
b=ones(1,20)/20;
NEU213yFilter = filtfilt(b,1,NEU213y); 
BF3yFilter = filtfilt(b,1,BF3y); 
%%
NEU213AndBF3 = figure('Name','NEU213AndBF3');
subplot(2,1,1)
semilogy(NEU213x,NEU213yFilter,'k',BF3x,BF3yFilter,'g','LineWidth',2); grid on; title('log_1_0');
grid on
legend('NEU213','BF3','Location','northwest')
subplot(2,1,2)
plot(NEU213x,NEU213yFilter,'k',BF3x,BF3y,'g','LineWidth',2); grid on; title('normal');
grid on
legend('NEU213y','BF3','Location','northwest')
saveas(NEU213AndBF3,strcat('plot\NEU213AndBF3'), 'epsc')
saveas(NEU213AndBF3,strcat('plot\NEU213AndBF3'), 'jpeg')
saveas(NEU213AndBF3,strcat('plot\NEU213AndBF3'), 'fig')

%%


%% controllo se ci sono dei Nan
for j=1:size(Spri)
    if (isnan(Spri(j)))
        Spri(j)=Spri(j+1);
    end
end
t = t(2:size(t));    
%% interpolazione dei segnali 
newTime = [0.35:0.0005:1.4]';
nN = interp1(t,n,newTime);
TeMaxN = interp1(t,TeMax,newTime);
neMaxN = interp1(t,neMax,newTime);
EllN = interp1(t,Ell,newTime);
SpriN = interp1(t,Spri,newTime);
iplN = interp1(time,IPL,newTime);
vloopN = interp1 ( time , Vloop, newTime);
NEU213yN= interp1(NEU213x,NEU213yFilter,newTime);
BF3yN =   interp1(BF3x, BF3y, newTime);

%% Integrale
for i = 2: size(SpriN,1)
 IntSpri(i) = trapz(newTime(1:i),SpriN(1:i));
end
%%
figure(1);
nsubplot = 3;
subplot(nsubplot,1,1)
plot(newTime,TeMaxN,'LineWidth',2); grid on; title('TeMax');
xlabel('time(s)');ylabel('[keV]');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
subplot(nsubplot,1,2)
plot(newTime,EllN,'LineWidth',2); grid on;  title('E_{||}');
xlabel('time(s)');ylabel('[V/m]');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
subplot(nsubplot,1,3)
plot(newTime,neMaxN,'LineWidth',2); grid on; title('density');
xlabel('time(s)');ylabel('[m^{-3}]');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
%%
figure('Name','SpriN and IntSpri')
ax2(1)= subplot(2,1,1)
plot(newTime,SpriN,'LineWidth',2); grid on; title('S_{pri}');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
ax2(2)= subplot(2,1,2)
plot(newTime,IntSpri,'LineWidth',2); grid on; title('S_{int}');
linkaxes(ax2,'x');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
%%
figure(3)
subplot(2,1,1)
plot(newTime,iplN,'LineWidth',2); grid on; title('IPL');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
subplot(2,1,2)
plot(newTime,vloopN,'LineWidth',2); grid on; title('vloopN');
figure(4)
plot(newTime,NEU213yN,newTime,NEU213yN-BF3yN,newTime,IntSpri*6e4,'LineWidth',2);
grid on; title('NEU213-BF3'); legend('NEU213y','NEU213-BF3','IntSpri*6e4');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
%%
NEU213 = figure('Name','Diff')
ax(1)=subplot(2,1,1)
plot(newTime,NEU213yN-BF3yN,newTime,IntSpri*6e4,'LineWidth',2);
grid on; title('NEU213-BF3'); legend('NEU213-BF3','IntSpri*6E4');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
ax(2)=subplot(2,1,2)
plot(newTime,mypseudo_derivative(newTime,NEU213yN-BF3yN,40,150),newTime,mypseudo_derivative(newTime,IntSpri*6e4,40,150),'LineWidth',2);
%plot(newTime,mypseudo_derivative(newTime,IntSpri,6,12),newTime,SpriN,'LineWidth',2);
grid on; title('d(NEU213-BF3)/dt and S_{pri}'); legend('d(NEU213-BF3)/dt','S_{pri}');
xlim([newTime(1),newTime(size(newTime,1)-1)]);
linkaxes(ax2,'x');
saveas(NEU213,strcat('plot\NEU213'), 'epsc')
saveas(NEU213,strcat('plot\NEU213'), 'jpeg')
saveas(NEU213,strcat('plot\NEU213'), 'fig')


%% sistema MISO
% DAT = iddata(Y,U,Ts)
z = iddata(NEU213yN-BF3yN,[neMaxN EllN],0.0005);
z.OutputName = 'n_e' ;
z.OutputUnit = 'count' ;
z.InputName = {'Ell' 'Electron Density'};
z.InputUnit = {'V/m' 'm-3'};


%primo tentativo n4sid
sysN4sid = n4sid(z,1);
figure('Name','n4sid');
compare(z,sysN4sid);


%% PEM

order=[1 2 1]; % [Ny Nu Nx]
t=0;
initialStates = struct('Name',  {'x1'},...
                       'Unit',  {''},...
                       'Value',  {IntSpri(1)},...
                       'Minimum', {-Inf},...
                       'Maximum',{Inf},...
                       'Fixed',{1});
                               
                   
%par=[-4.8635e-10 0 9.9219]
%par=[7.1767e-08 9.9998e+12 4.7989]
par=[7.0703e-08 9.9998e+12 4.4088]
model = idnlgrey('runaway',order,par);%,initialStates,t,'Name', 'Model Coil H Identification');
setpar(model, 'Fixed', {0 0 0}); 
setpar(model, 'Minimum', {0 0 0});
%setpar(model, 'Maximum', {Inf Inf 0.001});

%parameter
model.Algorithm.SimulationOptions.Solver= 'ode45';
model.Algorithm.Display='On';
model.Algorithm.Tolerance=1e-8;
model.Algorithm.MaxIter=40;
%
display('Merge data ');
z = merge(z); %multiexperiment   
%identificazione del modello
display('Start identification grey-box model');
modelId = pem(z, model);

figure('Name','pem');
%%
[YH, FIT, X0] = compare(z,modelId);
param = getpar(modelId,'Value')
y=get(YH,'OutputData');
figure('Name','compareData')
%coilH_Dez=figure('Name',strcat('Dez shot',num2str(sparo)))
plot(newTime,y,'b',newTime,NEU213yN-BF3yN,'k',newTime,IntSpri*6e4,'r','LineWidth',1.5);
xlim([newTime(1),newTime(size(newTime,1)-1)]);
grid on; legend('model (PEM)','NEU213-BF3','IntSpri*6e4','Location','northwest','FontSize',30); 
title(strcat('Runaway generation model Identification. Fitting: ', num2str(FIT),'%'));
xlabel('time(s)','interpreter','latex','fontsize',10);






